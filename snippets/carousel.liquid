<div
  x-data="
    {
        autoplayIntervalTime: 2000,
        slides: [
            {% if products != empty %}
             {% for pro in products %}
              {
                imgSrc: 'https://warm2069.myshopify.com/cdn/shop/{{pro}}?v=1730280433&width=900',
                imgAlt: '',
                title: '',
                description: '',
              },
              {% endfor %}
            {% endif %}
            {% comment %} {
                imgSrc: 'https://penguinui.s3.amazonaws.com/component-assets/carousel/default-slide-1.webp',
                imgAlt: 'Vibrant abstract painting with swirling blue and light pink hues on a canvas.',
                title: 'Front end developers',
                description: 'The architects of the digital world, constantly battling against their mortal enemy â€“ browser compatibility.',
            },
            {
                imgSrc: 'https://penguinui.s3.amazonaws.com/component-assets/carousel/default-slide-2.webp',
                imgAlt: 'Vibrant abstract painting with swirling red, yellow, and pink hues on a canvas.',
                title: 'Back end developers',
                description: 'Because not all superheroes wear capes, some wear headphones and stare at terminal screens',
            },
            {
                imgSrc: 'https://penguinui.s3.amazonaws.com/component-assets/carousel/default-slide-3.webp',
                imgAlt: 'Vibrant abstract painting with swirling blue and purple hues on a canvas.',
                title: 'Full stack developers',
                description: 'Where &quot;burnout&quot; is just a fancy term for &quot;Tuesday&quot;.',
            }, {% endcomment %}
        ],
        currentSlideIndex: 1,
        isPaused: false,
        autoplayInterval: null,
        previous() {
            if (this.currentSlideIndex > 1) {
                this.currentSlideIndex = this.currentSlideIndex - 1
            } else {
                this.currentSlideIndex = this.slides.length
            }
        },
        next() {
            if (this.currentSlideIndex < this.slides.length) {
                this.currentSlideIndex = this.currentSlideIndex + 1
            } else {
                this.currentSlideIndex = 1
            }
        },
        autoplay() {
            this.autoplayInterval = setInterval(() => {
                if (! this.isPaused) {
                    this.next()
                }
            }, this.autoplayIntervalTime)
        },
        setAutoplayInterval(newIntervalTime) {
            clearInterval(this.autoplayInterval)
            this.autoplayIntervalTime = newIntervalTime
            this.autoplay()
        },
    }
  "
  x-init="autoplay"
  class="relative w-full overflow-hidden hidden  {% if products != empty %} {% if class != empty %} {{ class }} {% endif %} {% endif %}"
>
  <div class="relative min-h-[21.2rem] w-full">
    <template x-for="(slide, index) in slides">
      <div
        x-cloak
        x-show="currentSlideIndex == index + 1"
        class="absolute inset-0"
        x-transition.opacity.duration.1000ms
      >
        <!-- Title and description -->
        <div
          class="
            lg:px-32 lg:py-14 absolute inset-0 z-10 flex flex-col items-center justify-end gap-2
            bg-gradient-to-t from-neutral-950/85 to-transparent
            px-16 py-12 text-center
          "
        >
          <h3
            class="w-full lg:w-[80%] text-balance text-2xl lg:text-3xl font-bold text-white"
            x-text="slide.title"
            x-bind:aria-describedby="'slide' + (index + 1) + 'Description'"
          ></h3>
          <p
            class="lg:w-1/2 w-full text-pretty text-sm text-neutral-300"
            x-text="slide.description"
            x-bind:id="'slide' + (index + 1) + 'Description'"
          ></p>
        </div>

        <img
          height=""
          width=""
          class="absolute w-full h-full inset-0 object-cover text-neutral-600 dark:text-neutral-300"
          x-bind:src="slide.imgSrc"
          x-bind:alt="slide.imgAlt"
        >
      </div>
    </template>
  </div>

  <!-- indicators -->
  <div
    class="absolute rounded-md bottom-3 md:bottom-5 left-1/2 z-20 flex -translate-x-1/2 gap-4 md:gap-3 px-1.5 py-1 md:px-2"
    role="group"
    aria-label="slides"
  >
    <template x-for="(slide, index) in slides">
      <button
        class="size-2 cursor-pointer rounded-full transition"
        x-on:click="(currentSlideIndex = index + 1), setAutoplayInterval(autoplayIntervalTime)"
        x-bind:class="[currentSlideIndex === index + 1 ? 'bg-neutral-300' : 'bg-neutral-300/50']"
        x-bind:aria-label="'slide ' + (index + 1)"
      ></button>
    </template>
  </div>
</div>
