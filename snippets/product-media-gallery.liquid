{% comment %}
  Renders a product media gallery. Should be used with 'media-gallery.js'
  Also see 'product-media-modal'

  Accepts:
  - product: {Object} Product liquid object
  - variant_images: {Array} Product images associated with a variant
  - limit: {Number} (optional) When passed, limits the number of media items to render

  Usage:
  {% render 'product-media-gallery' %}
{% endcomment %}

<style>
  :root {
    --display: none;
    --img: url('');
    --zoom-x: 50%;
    --zoom-y: 50%;
  }

  .productPageFullImage::after {
    content: '';
    display: var(--display);
    background-image: var(--img);
    background-size: 200%;
    background-position: var(--zoom-x) var(--zoom-y);
    position: absolute;
    height: 100%;
    width: 100%;
    top: 0;
    left: 0;
    z-index: 2;
    pointer-events: none;
  }
</style>

<div class="">
  <div
    class="py-16 shadow-lg flex flex-col items-center justify-around p-5 m-2 text-center relative cursor-pointer rounded-lg bg-gradient-to-r from-[#C6E7FF] to-[#D4F6FF]"
  >
    <div
      x-data="
          {
           imgArray:{{ product.media | json | escape}}.map((element) => `${element.src}`),
           selectedImage: 0,

        init() {
          this.updateZoomImage();
        },
        selectImage(index) {
          this.selectedImage = index;
          this.updateZoomImage();
        },
        updateZoomImage() {
          document.documentElement.style.setProperty('--img', `url(${this.imgArray[this.selectedImage]})`);
        },
        zoomImage(event) {
          document.documentElement.style.setProperty('--display', 'block');
          document.documentElement.style.setProperty('--zoom-x', `${(event.offsetX / event.target.offsetWidth) * 100}%`);
          document.documentElement.style.setProperty('--zoom-y', `${(event.offsetY / event.target.offsetHeight) * 100}%`);
        },
        hideZoom() {
          document.documentElement.style.setProperty('--display', 'none');
        },

          }
      "
      class="productPageContainer flex justify-center items-center "
    >
      <div class="productPageImgContainer grid grid-cols-[15%_85%] gap-4 w-3/4">
        <div>
          <div class="flex flex-col gap-y-[1.30rem]">
            <template x-for="(image, index) in imgArray" :key="index">
              <div
                :class="{ 'opacity-50': selectedImage !== index, 'selected': selectedImage === index }"
                @click="selectImage(index)"
                class="image hover:scale-105 hover:opacity-100 transition-all rounded-lg"
              >
                <img height="" width="" :src="image" class="rounded-lg" alt="">
              </div>
            </template>
          </div>
        </div>

        <div>
          {% if product.selected_or_first_available_variant.available == false
            or quantity_rule_soldout
            or product.selected_or_first_available_variant == null
          %}
            {% comment %}
              <div class="bg-indigo-100 text-indigo-600 text-base w-40 h-36 font-medium flex items-center justify-center text-center hover:animate-flyIn">
                flyIn
              </div>
            {% endcomment %}
            <div
              x-transition:enter="transition ease-out duration-300"
              class="relative left-16"
            >
              <a
                href="#"
                class="absolute top-8 left-[-4em] text-white text-center font-bold text-[16px] tracking-[0.06em] bg-red-700 py-2 px-10 shadow-[0_0_0.75em_rgba(0,0,0,0.5)] transform rotate-[-45deg] scale-y-[1] scale-x-[0.75] z-10"
              >
                Sold out
                <span
                  class="absolute inset-0 m-[-0.3em_-1em] border-2 border-dashed border-white/70 scale-[0.7]"
                ></span>
              </a>
            </div>
          {% endif %}
          <div
            class="productPageFullImage relative h-full flex justify-center items-center"
            @mousemove="zoomImage($event)"
            @mouseleave="hideZoom"
          >
            <img height="" width="" :src="imgArray[selectedImage]" alt="">
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
